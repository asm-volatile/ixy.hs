<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="325" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="325" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.GetDesc (23 samples, 2.30%)</title><rect x="597.6" y="53" width="27.2" height="15.0" fill="rgb(252,150,32)" rx="2" ry="2" />
<text text-anchor="" x="600.64" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >L..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>UNKNOWN (2 samples, 0.20%)</title><rect x="1187.6" y="277" width="2.4" height="15.0" fill="rgb(237,56,7)" rx="2" ry="2" />
<text text-anchor="" x="1190.64" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.BumpIndex (10 samples, 1.00%)</title><rect x="1015.4" y="53" width="11.8" height="15.0" fill="rgb(218,93,21)" rx="2" ry="2" />
<text text-anchor="" x="1018.36" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (1,000 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(248,90,40)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.ReadClean (8 samples, 0.80%)</title><rect x="780.5" y="69" width="9.5" height="15.0" fill="rgb(208,184,34)" rx="2" ry="2" />
<text text-anchor="" x="783.54" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.send (444 samples, 44.40%)</title><rect x="663.7" y="101" width="523.9" height="15.0" fill="rgb(234,25,4)" rx="2" ry="2" />
<text text-anchor="" x="666.72" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Lib.Ixgbe.send</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.receive.go.bufPtr (21 samples, 2.10%)</title><rect x="567.0" y="69" width="24.7" height="15.0" fill="rgb(223,172,11)" rx="2" ry="2" />
<text text-anchor="" x="569.96" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >L..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.receive.go.next (20 samples, 2.00%)</title><rect x="624.8" y="69" width="23.6" height="15.0" fill="rgb(220,45,29)" rx="2" ry="2" />
<text text-anchor="" x="627.78" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >L..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Control.Monad.Logger.&gt;&gt;=.\ (998 samples, 99.80%)</title><rect x="10.0" y="197" width="1177.6" height="15.0" fill="rgb(229,28,45)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Control.Monad.Logger.&gt;&gt;=.\</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.ReadIndex (12 samples, 1.20%)</title><rect x="790.0" y="69" width="14.1" height="15.0" fill="rgb(212,75,3)" rx="2" ry="2" />
<text text-anchor="" x="792.98" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Control.Monad.Logger.&gt;&gt;= (998 samples, 99.80%)</title><rect x="10.0" y="213" width="1177.6" height="15.0" fill="rgb(249,7,52)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Control.Monad.Logger.&gt;&gt;=</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.send.queue (1 samples, 0.10%)</title><rect x="1186.5" y="85" width="1.1" height="15.0" fill="rgb(213,160,38)" rx="2" ry="2" />
<text text-anchor="" x="1189.46" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>MAIN.MAIN (998 samples, 99.80%)</title><rect x="10.0" y="277" width="1177.6" height="15.0" fill="rgb(211,190,0)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >MAIN.MAIN</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.receive.go.descPtr (28 samples, 2.80%)</title><rect x="591.7" y="69" width="33.1" height="15.0" fill="rgb(241,220,28)" rx="2" ry="2" />
<text text-anchor="" x="594.74" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Li..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.receive.shiftTail (1 samples, 0.10%)</title><rect x="661.4" y="69" width="1.1" height="15.0" fill="rgb(233,92,34)" rx="2" ry="2" />
<text text-anchor="" x="664.36" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.receive.go.bufPhysAddr (22 samples, 2.20%)</title><rect x="541.0" y="69" width="26.0" height="15.0" fill="rgb(234,176,13)" rx="2" ry="2" />
<text text-anchor="" x="544.00" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >L..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.cmdTypeLen (10 samples, 1.00%)</title><rect x="1139.3" y="37" width="11.8" height="15.0" fill="rgb(246,7,25)" rx="2" ry="2" />
<text text-anchor="" x="1142.26" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Main.forward (997 samples, 99.70%)</title><rect x="11.2" y="117" width="1176.4" height="15.0" fill="rgb(219,189,40)" rx="2" ry="2" />
<text text-anchor="" x="14.18" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Main.forward</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.PeekDesc (33 samples, 3.30%)</title><rect x="449.0" y="69" width="38.9" height="15.0" fill="rgb(241,44,42)" rx="2" ry="2" />
<text text-anchor="" x="451.96" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Lib..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.send.go.descPtr (16 samples, 1.60%)</title><rect x="1151.1" y="53" width="18.8" height="15.0" fill="rgb(223,135,41)" rx="2" ry="2" />
<text text-anchor="" x="1154.06" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.PokeBuf (34 samples, 3.40%)</title><rect x="1027.2" y="53" width="40.1" height="15.0" fill="rgb(226,12,18)" rx="2" ry="2" />
<text text-anchor="" x="1030.16" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Lib..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.receive.queue (1 samples, 0.10%)</title><rect x="662.5" y="85" width="1.2" height="15.0" fill="rgb(249,22,48)" rx="2" ry="2" />
<text text-anchor="" x="665.54" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.PokeDesc (37 samples, 3.70%)</title><rect x="1067.3" y="53" width="43.6" height="15.0" fill="rgb(220,184,27)" rx="2" ry="2" />
<text text-anchor="" x="1070.28" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Lib...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.receive (545 samples, 54.50%)</title><rect x="20.6" y="101" width="643.1" height="15.0" fill="rgb(232,32,6)" rx="2" ry="2" />
<text text-anchor="" x="23.62" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Lib.Ixgbe.receive</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Main.&gt;&gt;= (998 samples, 99.80%)</title><rect x="10.0" y="229" width="1177.6" height="15.0" fill="rgb(223,69,35)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Main.&gt;&gt;=</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.Queue.isDone (7 samples, 0.70%)</title><rect x="524.5" y="69" width="8.2" height="15.0" fill="rgb(225,200,48)" rx="2" ry="2" />
<text text-anchor="" x="527.48" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.Queue.poke (7 samples, 0.70%)</title><rect x="1102.7" y="37" width="8.2" height="15.0" fill="rgb(208,98,33)" rx="2" ry="2" />
<text text-anchor="" x="1105.68" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.GetBuf (9 samples, 0.90%)</title><rect x="581.1" y="53" width="10.6" height="15.0" fill="rgb(236,123,54)" rx="2" ry="2" />
<text text-anchor="" x="584.12" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.send.clean (9 samples, 0.90%)</title><rect x="664.9" y="85" width="10.6" height="15.0" fill="rgb(234,178,38)" rx="2" ry="2" />
<text text-anchor="" x="667.90" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.Working (310 samples, 31.00%)</title><rect x="804.1" y="69" width="365.8" height="15.0" fill="rgb(241,137,1)" rx="2" ry="2" />
<text text-anchor="" x="807.14" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Lib.Ixgbe.Working</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.Queue.poke (5 samples, 0.50%)</title><rect x="518.6" y="53" width="5.9" height="15.0" fill="rgb(252,54,49)" rx="2" ry="2" />
<text text-anchor="" x="521.58" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.send.go.nextIndex (14 samples, 1.40%)</title><rect x="1169.9" y="69" width="16.6" height="15.0" fill="rgb(247,176,22)" rx="2" ry="2" />
<text text-anchor="" x="1172.94" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.GetBufPhys (7 samples, 0.70%)</title><rect x="558.7" y="53" width="8.3" height="15.0" fill="rgb(215,101,23)" rx="2" ry="2" />
<text text-anchor="" x="561.70" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.send.go.cmdTypeLen (16 samples, 1.60%)</title><rect x="1132.2" y="53" width="18.9" height="15.0" fill="rgb(215,61,46)" rx="2" ry="2" />
<text text-anchor="" x="1135.18" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.PokeResetDesc (31 samples, 3.10%)</title><rect x="487.9" y="69" width="36.6" height="15.0" fill="rgb(246,179,7)" rx="2" ry="2" />
<text text-anchor="" x="490.90" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Lib..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.send.go.bufPhysAddr (9 samples, 0.90%)</title><rect x="1110.9" y="53" width="10.7" height="15.0" fill="rgb(243,152,34)" rx="2" ry="2" />
<text text-anchor="" x="1113.94" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.PackBuf (135 samples, 13.50%)</title><rect x="289.7" y="69" width="159.3" height="15.0" fill="rgb(249,106,52)" rx="2" ry="2" />
<text text-anchor="" x="292.66" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Lib.Ixgbe.PackBuf</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.send.clean.descPtr (1 samples, 0.10%)</title><rect x="674.3" y="69" width="1.2" height="15.0" fill="rgb(213,96,5)" rx="2" ry="2" />
<text text-anchor="" x="677.34" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Main.main (998 samples, 99.80%)</title><rect x="10.0" y="261" width="1177.6" height="15.0" fill="rgb(253,3,7)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Main.main</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.send.go.bufPtr (9 samples, 0.90%)</title><rect x="1121.6" y="53" width="10.6" height="15.0" fill="rgb(206,6,50)" rx="2" ry="2" />
<text text-anchor="" x="1124.56" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Main.loop (998 samples, 99.80%)</title><rect x="10.0" y="133" width="1177.6" height="15.0" fill="rgb(218,66,16)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Main.loop</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Main.run (998 samples, 99.80%)</title><rect x="10.0" y="245" width="1177.6" height="15.0" fill="rgb(230,10,14)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Main.run</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.send.go.\ (20 samples, 2.00%)</title><rect x="1043.7" y="37" width="23.6" height="15.0" fill="rgb(254,35,28)" rx="2" ry="2" />
<text text-anchor="" x="1046.68" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >L..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.receive.go.pkts' (11 samples, 1.10%)</title><rect x="648.4" y="69" width="13.0" height="15.0" fill="rgb(238,90,48)" rx="2" ry="2" />
<text text-anchor="" x="651.38" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.receive.go (543 samples, 54.30%)</title><rect x="21.8" y="85" width="640.7" height="15.0" fill="rgb(250,56,32)" rx="2" ry="2" />
<text text-anchor="" x="24.80" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Lib.Ixgbe.receive.go</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.Queue.isEndOfPacket (7 samples, 0.70%)</title><rect x="532.7" y="69" width="8.3" height="15.0" fill="rgb(248,186,53)" rx="2" ry="2" />
<text text-anchor="" x="535.74" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Control.Monad.Logger.&gt;&gt;=.\.(...) (998 samples, 99.80%)</title><rect x="10.0" y="181" width="1177.6" height="15.0" fill="rgb(238,122,41)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Control.Monad.Logger.&gt;&gt;=.\.(...)</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.send.go (433 samples, 43.30%)</title><rect x="675.5" y="85" width="511.0" height="15.0" fill="rgb(228,71,35)" rx="2" ry="2" />
<text text-anchor="" x="678.52" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Lib.Ixgbe.send.go</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Lib.Ixgbe.Queue.peek (13 samples, 1.30%)</title><rect x="472.6" y="53" width="15.3" height="15.0" fill="rgb(229,162,21)" rx="2" ry="2" />
<text text-anchor="" x="475.56" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
</svg>
